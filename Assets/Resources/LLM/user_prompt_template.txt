Task: Generate Lua that controls a Unity GameObject using MoonSharp + DOTween proxies.
GameObject display name: {OBJECT_NAME}

User intent:
{INTENT}

CURRENT_LUA (optional, for edit-in-place):
{CURRENT_LUA}

Contract (required function signatures):
function start(self)
function update(self, deltaTime)
function on_trigger(self, other)
function on_collision(self, col)

Transform access (preferred):
- Read/write via proxy properties:
  local p = self.transform.position
  p.x = p.x + 1
  self.transform.position = { x = p.x, y = p.y, z = p.z }
- Also valid: self.transform.localPosition, self.transform.localScale, self.transform.eulerAngles

DOTween usage:
- Create tweens in start(self) or on_trigger(self, other), not every frame in update.
- Examples:
  -- dotween:MoveTo(self.transform, 0, 1, 0, 1.2, 'OutQuad')
  -- dotween:ScaleTo(self.transform, 1.5, 1.5, 1.5, 0.5, 'InOutSine')

Rules:
- Output ONLY valid Lua (no markdown, no explanations).
- Use update(self, deltaTime) for continuous logic; on_trigger/on_collision for events.
- Donâ€™t reference Time.deltaTime directly; use deltaTime parameter.
- Durations in seconds; vectors are tables {x=..., y=..., z=...}.
- Keep function names exactly as specified (lowercase).
